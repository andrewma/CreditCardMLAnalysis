train = CreditCard$card[1:600,]
library(class)
train = (card == 0)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=card[train]
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(1)
knn.pred=knn(train.X,test.X,train.card,k=1)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(1)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(1)
#knn.pred=knn(train.X,test.X,train.card,k=3)
knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=1)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(1)
#knn.pred=knn(train.X,test.X,train.card,k=3)
knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
#knn.pred=knn(train.X,test.X,train.card,k=3)
knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$reports >3)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard$card[1,600],)
library(class)
train = (CreditCard$creports>2)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$reports>2)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard$card[1:600])
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$card[1:600,])
library(class)
train = (CreditCard$card[1,600])
library(class)
train = (CreditCard$card == 0)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$card == 1)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard$dependents <3)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard$dependents <3)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
#table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard$dependents <3)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
knn.pred
#table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard$cards)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
library(class)
train = (CreditCard$reports>3)
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
#knn.pred = knn(data.frame(train.X), data.frame(test.X), train.card, k=2)
knn.pred
#table(knn.pred,CreditCard$card)
library(class)
train = (CreditCard[1,600])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[!train,]
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1329],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1319],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=3)
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1319],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=30)
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1319],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=30)
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1319],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=0)
library(class)
train = (CreditCard[1,659])
head(train)
train.X=cbind(CreditCard$reports,CreditCard$share)[train,]
test.X=cbind(CreditCard$reports,CreditCard$share)[CreditCard[660,1319],]
train.card=CreditCard$card[train]
set.seed(5)
knn.pred=knn(train.X,test.X,train.card,k=1)
library(AER)
data(CreditCard)
CreditCard$card01 <- ifelse(CreditCard$card=="yes", 1, 0)
glm.fits1 <- glm(card~reports+share+selfemp+majorcards+active,
data = CreditCard, family = binomial)
glm.probs1 = predict(glm.fits1,CreditCard,type="response")
glm.pred1 = rep(0,length(glm.probs1))
glm.pred1[glm.probs1>.99]=1
table1 = table(glm.pred1,CreditCard$card)
logperf = (sum(diag(table1)))/sum(table1)
table1
logperf
plot(reports,card01,xlab="reports",ylab="card01")
library(AER)
data(CreditCard)
CreditCard$card01 <- ifelse(CreditCard$card=="yes", 1, 0)
attach(CreditCard)
glm.fits1 <- glm(card~reports+share+selfemp+majorcards+active,
data = CreditCard, family = binomial)
glm.probs1 = predict(glm.fits1,CreditCard,type="response")
glm.pred1 = rep(0,length(glm.probs1))
glm.pred1[glm.probs1>.99]=1
table1 = table(glm.pred1,CreditCard$card)
logperf = (sum(diag(table1)))/sum(table1)
table1
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
data("CreditCard")
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
glm.fits1 <- glm(card~.,
data = train, family = "binomial")
logitmodel = predict(glm.fits1,test,type="response")
logpred = rep(0,length(logitmodel))
logpred[logitmodel>.1]=1
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
X_card_trn = train[, -1]
Y_card_trn = train$card
# testing data
X_card_tst = test[, -1]
Y_card_tst = test$card
set.seed(123)
card_pred = knn(train = scale(X_card_trn),
test  = scale(X_card_tst),
cl    = Y_card_trn,
k     = 12,
prob  = TRUE)
set.seed(123)
i=1
k.optm=1
bestk = 0;
besti = 0;
for (i in 1:30){
set.seed(123)
knn.mod <- knn(train=scale(X_card_trn), test=scale(X_card_tst), cl=Y_card_trn,
k=i, prob = TRUE)
k.optm[i] <- sum(Y_card_tst == knn.mod)/NROW(Y_card_tst)
k=i
if(k.optm[i]>bestk) {
bestk = k.optm[i]
besti = k
}
}
bestk
besti
plot(k.optm, type="b", xlab="K- Value",ylab="Accuracy level")
knn_matrix = table(card_pred, Y_card_tst)
knnperf = (sum(diag(knn_matrix)))/sum(knn_matrix)
knn_matrix
knnperf
mlperformance<-matrix(c(logperf, knnperf),ncol=1,byrow=TRUE)
rownames(mlperformance)<-c("Logistic Regression", "K Nearest Neighbors")
colnames(mlperformance)<-c("Performance")
mlperformance <- as.table(mlperformance)
mlperformance
plot(selfemp,card01,xlab="selfemp",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(selfemp=x),type="resp"),add=TRUE)
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
plot(majorcards,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(majorcards=x),type="resp"),add=TRUE)
plot(majorcards,card01,xlab="reports",ylab="card01")
g=glm(card~majorcards,family=binomial,data = CreditCard)
curve(predict(g,data.frame(majorcards=x),type="resp"),add=TRUE)
plot(share,card01,xlab="share",ylab="card01")
g=glm(card~share,family=binomial,data = CreditCard)
curve(predict(g,data.frame(share=x),type="resp"),add=TRUE)
library(AER)
data(CreditCard)
CreditCard$card01 <- ifelse(CreditCard$card=="yes", 1, 0)
attach(CreditCard)
glm.fits1 <- glm(card~reports+share+selfemp+majorcards+active,
data = CreditCard, family = binomial)
glm.probs1 = predict(glm.fits1,CreditCard,type="response")
glm.pred1 = rep(0,length(glm.probs1))
glm.pred1[glm.probs1>.99]=1
table1 = table(glm.pred1,CreditCard$card)
logperf = (sum(diag(table1)))/sum(table1)
table1
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
data("CreditCard")
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
glm.fits1 <- glm(card~.,
data = train, family = "binomial")
logitmodel = predict(glm.fits1,test,type="response")
logpred = rep(0,length(logitmodel))
logpred[logitmodel>.1]=1
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
X_card_trn = train[, -1]
Y_card_trn = train$card
# testing data
X_card_tst = test[, -1]
Y_card_tst = test$card
set.seed(123)
card_pred = knn(train = scale(X_card_trn),
test  = scale(X_card_tst),
cl    = Y_card_trn,
k     = 12,
prob  = TRUE)
set.seed(123)
i=1
k.optm=1
bestk = 0;
besti = 0;
for (i in 1:30){
set.seed(123)
knn.mod <- knn(train=scale(X_card_trn), test=scale(X_card_tst), cl=Y_card_trn,
k=i, prob = TRUE)
k.optm[i] <- sum(Y_card_tst == knn.mod)/NROW(Y_card_tst)
k=i
if(k.optm[i]>bestk) {
bestk = k.optm[i]
besti = k
}
}
bestk
besti
plot(k.optm, type="b", xlab="K- Value",ylab="Accuracy level")
knn_matrix = table(card_pred, Y_card_tst)
knnperf = (sum(diag(knn_matrix)))/sum(knn_matrix)
knn_matrix
knnperf
mlperformance<-matrix(c(logperf, knnperf),ncol=1,byrow=TRUE)
rownames(mlperformance)<-c("Logistic Regression", "K Nearest Neighbors")
colnames(mlperformance)<-c("Performance")
mlperformance <- as.table(mlperformance)
mlperformance
library(AER)
data(CreditCard)
CreditCard$card01 <- ifelse(CreditCard$card=="yes", 1, 0)
attach(CreditCard)
glm.fits1 <- glm(card~reports+share+selfemp+majorcards+active,
data = CreditCard, family = binomial)
glm.probs1 = predict(glm.fits1,CreditCard,type="response")
glm.pred1 = rep(0,length(glm.probs1))
glm.pred1[glm.probs1>.99]=1
table1 = table(glm.pred1,CreditCard$card)
logperf = (sum(diag(table1)))/sum(table1)
table1
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
data("CreditCard")
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
glm.fits1 <- glm(card~.,
data = train, family = "binomial")
logitmodel = predict(glm.fits1,test,type="response")
logpred = rep(0,length(logitmodel))
logpred[logitmodel>.1]=1
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
plot(reports,card01,xlab="reports",ylab="card01")
g=glm(card~reports,family=binomial,data = CreditCard)
curve(predict(g,data.frame(reports=x),type="resp"),add=TRUE)
logit_matrix = table(logpred,test$card)
logperf = (sum(diag(logit_matrix)))/sum(logit_matrix)
logit_matrix
logperf
library(class)
library(dplyr)
data("CreditCard")
CreditCard$card <- ifelse(CreditCard$card=="yes", 1, 0)
CreditCard$owner <- ifelse(CreditCard$owner=="yes", 1, 0)
CreditCard$selfemp <- ifelse(CreditCard$selfemp=="yes", 1, 0)
set.seed(123)
train = CreditCard %>% sample_frac(.7)
test = CreditCard %>% setdiff(train)
X_card_trn = train[, -1]
Y_card_trn = train$card
# testing data
X_card_tst = test[, -1]
Y_card_tst = test$card
set.seed(123)
card_pred = knn(train = scale(X_card_trn),
test  = scale(X_card_tst),
cl    = Y_card_trn,
k     = 12,
prob  = TRUE)
set.seed(123)
i=1
k.optm=1
bestk = 0;
besti = 0;
for (i in 1:30){
set.seed(123)
knn.mod <- knn(train=scale(X_card_trn), test=scale(X_card_tst), cl=Y_card_trn,
k=i, prob = TRUE)
k.optm[i] <- sum(Y_card_tst == knn.mod)/NROW(Y_card_tst)
k=i
if(k.optm[i]>bestk) {
bestk = k.optm[i]
besti = k
}
}
bestk
besti
plot(k.optm, type="b", xlab="K- Value",ylab="Accuracy level")
knn_matrix = table(card_pred, Y_card_tst)
knnperf = (sum(diag(knn_matrix)))/sum(knn_matrix)
knn_matrix
knnperf
mlperformance<-matrix(c(logperf, knnperf),ncol=1,byrow=TRUE)
rownames(mlperformance)<-c("Logistic Regression", "K Nearest Neighbors")
colnames(mlperformance)<-c("Performance")
mlperformance <- as.table(mlperformance)
mlperformance
